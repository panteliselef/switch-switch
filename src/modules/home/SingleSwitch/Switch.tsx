/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react';
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei';
import * as THREE from 'three';

export default function Switch(props) {
    const group = useRef();
    // eslint-disable-next-line @typescript-eslint/ban-ts-comment
    // @ts-ignore
    const { nodes, materials, animations } = useGLTF('/switch.glb');
    const { actions } = useAnimations(animations, group);

    useEffect(() => {
        if (actions['All Animations']) {
            actions['All Animations'].timeScale = 1;

            actions['All Animations'].play();
            actions['All Animations'].loop = THREE.LoopPingPong;
        }
    }, [actions]);

    return (
        <group ref={group} {...props} dispose={null}>
            <group>
                <group name="group1" position={[-0.01, -0.53, 3.23]}>
                    <group name="camera1_1" position={[0.125, 0.01, -2.37]} rotation={[-0.01, 0, 0]} scale={6.86}>
                        <PerspectiveCamera name="camera1_2" makeDefault={true} far={10000} fov={37.85} zoom={4} />
                    </group>
                    <mesh
                        name="pasted__pUT_ULT_003_UV1_P6"
                        geometry={nodes.pasted__pUT_ULT_003_UV1_P6.geometry}
                        material={materials.aiStandardSurface1}
                        position={[0.13, 0.02, -4.08]}
                        rotation={[-1.18, 0.29, 0.77]}
                    />
                </group>
                <PerspectiveCamera
                    name="default_camera"
                    makeDefault={false}
                    far={197.85}
                    near={0}
                    fov={45.84}
                    position={[0.36, 0.47, -0.47]}
                    rotation={[-Math.PI, 0, -Math.PI]}
                />
            </group>
        </group>
    );
}

useGLTF.preload('/switch.glb');
